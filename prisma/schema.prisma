// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}


model User {
  id        String         @id @default(uuid())
  email     String         @unique
  clerkId   String         @unique
  name      String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  languages UserLanguage[]
}

model Language {
  id                String   @id @default(uuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  name              String
  color             String
  users             UserLanguage[]
  globalPrompts     GlobalPrompt[]

  @@unique([name])
}


model UserLanguage {
  id         String    @id @default(uuid())
  userId     String
  languageId String
  user       User      @relation(fields: [userId], references: [id])
  language   Language  @relation(fields: [languageId], references: [id])
  
  prompts    Prompt[]

  @@unique([userId, languageId])
}

model GlobalPrompt {
  id            String @id @default(uuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  content       String @db.Text
  languageId    String
  language      Language  @relation(fields: [languageId], references: [id])
  prompts       Prompt[]

  @@unique([id, languageId])
  @@index([id, languageId])
}



model Prompt {
  id                 String @id @default(uuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  answer             String @db.Text
  globalPromptId     String
  globalPrompt       GlobalPrompt @relation(fields: [globalPromptId], references: [id])
  userLanguageId     String
  userLanguage       UserLanguage @relation(fields: [userLanguageId], references: [id])

  @@index([userLanguageId])
}